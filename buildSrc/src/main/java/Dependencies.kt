object Versions {
    val build_tools = "27.0.3"
    val compile_sdk = 28
    val min_sdk = 19
    val target_sdk = 28
    val version_code = 1
    val version_name = "1.0"

    val android_gradle_plugin = "3.2.0-alpha18"
    val arch_core_testing = "2.0.0-alpha1"
    val constraint_layout = "1.1.0"
    val core_ktx = "1.0.0-alpha3"
    val crashlytics = "2.9.2"
    val dagger = "2.16"
    val dexmaker = "2.16.0"
    val espresso = "3.1.0-alpha2"
    val fabric = "1.25.4"
    val fast_csv = "1.0.2"
    val firebase = "16.0.0"
    val glide = "3.8.0"
    val google_services_plugin = "4.0.1"
    val grgit_plugin = "1.5.0"
    val guava = "20.0"
    val hamcrest = "1.3"
    val junit = "4.12"
    val junit5_plugin = "1.0.32"
    val kotlin = "1.2.41"
    val leakcanary = "1.5.4"
    val lifecycle = "2.0.0-alpha1"
    val material_components = "1.0.0-alpha3"
    val mockito = "2.18.3"
    val mockito_kotlin = "1.5.0"
    val mockwebserver = "3.8.1"
    val multidex = "2.0.0"
    val navigation = "1.0.0-alpha02"
    val okhttp_logging_interceptor = "3.9.0"
    val paging = "2.0.0-alpha1"
    val play_services = "15.0.1"
    val reactive_network = "0.12.3"
    val retrofit = "2.3.0"
    val room = "2.0.0-alpha1"
    val rx_android = "2.0.2"
    val rx_binding = "2.1.1"
    val rx_relay = "2.0.0"
    val rxjava2 = "2.1.14"
    val rxkotlin = "2.2.0"
    val support = "1.0.0-alpha3"
    val test_rules = "1.1.0-alpha3"
    val test_runner = "1.1.0-alpha3"
    val threeten_backport = "1.3.6"
    val timber = "4.7.0"
    val work_manager = "1.0.0-alpha02"
}

object Deps {
    val android_gradle_plugin = "com.android.tools.build:gradle:${Versions.android_gradle_plugin}"
    val arch_core_testing = "androidx.arch.core:core-testing:${Versions.arch_core_testing}"
    val core_ktx = "androidx.core:core-ktx:${Versions.core_ktx}"
    val crashlytics = "com.crashlytics.sdk.android:crashlytics:${Versions.crashlytics}"
    val dagger_android = "com.google.dagger:dagger-android:${Versions.dagger}"
    val dagger_android_support = "com.google.dagger:dagger-android-support:${Versions.dagger}"
    val dagger_android_support_compiler = "com.google.dagger:dagger-android-processor:${Versions.dagger}"
    val dagger_compiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    val dagger_runtime = "com.google.dagger:dagger:${Versions.dagger}"
    val deps_okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp_logging_interceptor}"
    val dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:${Versions.dexmaker}"
    val espresso_contrib = "androidx.test.espresso:espresso-contrib:${Versions.espresso}"
    val espresso_core = "androidx.test.espresso:espresso-core:${Versions.espresso}"
    val espresso_intents = "androidx.test.espresso:espresso-intents:${Versions.espresso}"
    val fabric_plugin = "io.fabric.tools:gradle:${Versions.fabric}"
    val fast_csv = "de.siegmar:fastcsv:${Versions.fast_csv}"
    val firebase_core = "com.google.firebase:firebase-core:${Versions.firebase}"
    val glide = "com.github.bumptech.glide:glide:${Versions.glide}"
    val google_services_plugin = "com.google.gms:google-services:${Versions.google_services_plugin}"
    val grgit_plugin = "org.ajoberstar:grgit:${Versions.grgit_plugin}"
    val guava = "com.google.guava:guava:${Versions.guava}"
    val hamcrest = "org.hamcrest:hamcrest-all:${Versions.hamcrest}"
    val junit = "junit:junit:${Versions.junit}"
    val junit5_plugin = "de.mannodermaus.gradle.plugins:android-junit5:${Versions.junit5_plugin}"
    val kotlin_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    val kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"
    val kotlin_test = "org.jetbrains.kotlin:kotlin-test-junit:${Versions.kotlin}"
    val leakcanary = "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanary}"
    val leakcanary_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakcanary}"
    val lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:${Versions.lifecycle}"
    val lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:${Versions.lifecycle}"
    val lifecycle_java8 = "androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle}"
    val lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:${Versions.lifecycle}"
    val material_components = "com.google.android.material:material:${Versions.material_components}"
    val mock_web_server = "com.squareup.okhttp3:mockwebserver:${Versions.mockwebserver}"
    val mockito_core = "org.mockito:mockito-core:${Versions.mockito}"
    val mockito_inline = "org.mockito:mockito-inline:${Versions.mockito}"
    val mockito_kotlin = "com.nhaarman:mockito-kotlin:${Versions.mockito_kotlin}"
    val multidex = "androidx.multidex:multidex:${Versions.multidex}"
    val multidex_instrumentation = "androidx.multidex:multidex-instrumentation:${Versions.multidex}"
    val navigation_fragment = "android.arch.navigation:navigation-fragment-ktx:${Versions.navigation}"
    val navigation_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:${Versions.navigation}"
    val navigation_testing = "android.arch.navigation:navigation-testing:${Versions.navigation}"
    val navigation_ui = "android.arch.navigation:navigation-ui-ktx:${Versions.navigation}"
    val paging = "androidx.paging:paging-runtime:${Versions.paging}"
    val paging_rx = "androidx.paging:paging-rxjava2:${Versions.paging}"
    val play_services_auth = "com.google.android.gms:play-services-auth:${Versions.play_services_auth}"
    val play_services_drive = "com.google.android.gms:play-services-drive:${Versions.play_services}"
    val reactive_network = "com.github.pwittchen:reactivenetwork-rx2:${Versions.reactive_network}"
    val retrofit_gson = "com.squareup.retrofit2:converter-gson:${Versions.retrofit}"
    val retrofit_mock = "com.squareup.retrofit2:retrofit-mock:${Versions.retrofit}"
    val retrofit_runtime = "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    val room_compiler = "androidx.room:room-compiler:${Versions.room}"
    val room_runtime = "androidx.room:room-runtime:${Versions.room}"
    val room_rxjava2 = "androidx.room:room-rxjava2:${Versions.room}"
    val room_testing = "androidx.room:room-testing:${Versions.room}"
    val rxandroid = "io.reactivex.rxjava2:rxandroid:${Versions.rx_android}"
    val rxbinding = "com.jakewharton.rxbinding2:rxbinding-kotlin:${Versions.rx_binding}"
    val rxjava2 = "io.reactivex.rxjava2:rxjava:${Versions.rxjava2}"
    val rxkotlin = "io.reactivex.rxjava2:rxkotlin:${Versions.rxkotlin}"
    val rxrelay = "com.jakewharton.rxrelay2:rxrelay:${Versions.rx_relay}"
    val support_annotations = "androidx.annotation:annotation:${Versions.support}"
    val support_app_compat = "androidx.appcompat:appcompat:${Versions.support}"
    val support_cardview = "androidx.cardview:cardview:${Versions.support}"
    val support_constraint_layout = "androidx.constraintlayout:constraintlayout:${Versions.constraint_layout}"
    val support_core_utils = "androidx.legacy:legacy-support-core-utils:${Versions.support}"
    val support_recyclerview = "androidx.recyclerview:recyclerview:${Versions.support}"
    val support_v4 = "androidx.legacy:legacy-support-v4:${Versions.support}"
    val support_vector_drawable = "androidx.vectordrawable:vectordrawable:${Versions.support}"
    val test_rules = "androidx.test:rules:${Versions.test_rules}"
    val test_runner = "androidx.test:runner:${Versions.test_runner}"
    val threeten_backport = "org.threeten:threetenbp:${Versions.threeten_backport}"
    val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    val work_manager_runtime = "android.arch.work:work-runtime-ktx:${Versions.work_manager}"
    val work_manager_firebase = "android.arch.work:work-firebase:${Versions.work_manager}"
    val work_manager_testing = "android.arch.work:work-testing:${Versions.work_manager}"
}
