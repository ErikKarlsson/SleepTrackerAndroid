apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

kapt {
    correctErrorTypes = true
}

apply plugin: 'dagger.hilt.android.plugin'

android {
    composeOptions {
        kotlinCompilerVersion Versions.kotlin
        kotlinCompilerExtensionVersion Versions.compose
    }

    kotlinOptions {
        useIR = true
    }

    buildFeatures {
        compose true
    }

}

androidExtensions {
    features = ["parcelize"]
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':libraries:core')
    implementation project(':libraries:domain')
    implementation project(':libraries:ui-components')
    implementation project(':libraries:ui-components-compose')
    implementation project(':libraries:navigation')

    implementation Deps.dagger_hilt
    implementation Deps.dagger_assisted_injection_annotations
    kapt Deps.dagger_assisted_injection_processor
    kapt Deps.dagger_hilt_compiler

    implementation Deps.hilt_viewmodel
    kapt Deps.hilt_compiler

    implementation Deps.navigation_fragment
    implementation Deps.navigation_ui
    androidTestImplementation Deps.navigation_testing

    implementation Deps.core_ktx

    implementation Deps.coroutines_core
    implementation Deps.coroutines_android

    implementation Deps.timber

    implementation Deps.support_app_compat
    implementation Deps.support_cardview
    implementation Deps.support_constraint_layout
    implementation Deps.support_v4
    implementation Deps.support_vector_drawable

    implementation Deps.compose_ui
    implementation Deps.compose_ui_tooling
    implementation Deps.compose_foundation
    implementation Deps.compose_material
    implementation Deps.compose_material_icons
    implementation Deps.compose_material_icons_extended
    implementation Deps.compose_livedata
}
